name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set up Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: Verify Maven installation
        run: mvn -version

      - name: Get product name and version
        run: |
          echo "VERSION=$(mvn help:evaluate -q -DforceStdout -D"expression=project.version")" >> $GITHUB_ENV
          echo "NAME=$(mvn help:evaluate -q -DforceStdout -D"expression=project.name")" >> $GITHUB_ENV

      - name: Build Java project with Maven
        run: |
          mvn dependency:go-offline -Pproduction
          mvn clean package -DskipTests -Pproduction

      - name: Build and push Docker image
        run: |
          docker build -t cristiandelahooz/${NAME}:latest .
          docker push cristiandelahooz/${NAME}:latest

      - name: SSH into the server and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/petcare
            docker compose pull
            docker compose down -v
            docker compose up -d

      - name: Get last commit message
        if: always()
        run: |
          LAST_COMMIT_MESSAGE=$(git show -s --format='%h %s')
          echo "LAST_COMMIT_MESSAGE=$LAST_COMMIT_MESSAGE" >> $GITHUB_ENV

      - name: Send Telegram Notification
        if: success()
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d "parse_mode=HTML" \
            -d "text=üöÄ <b>Deployed to production</b>%0A%0A<code>${{ env.LAST_COMMIT_MESSAGE }}</code>%0A%0Aüì¶ v${{ env.VERSION }} ‚Ä¢ üîó ${{ secrets.SERVER_HOST }}"

      - name: Send Failure Notification
        if: failure()
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d "parse_mode=HTML" \
            -d "text=üí• <b>Deployment failed</b>%0A%0A<code>${{ env.LAST_COMMIT_MESSAGE }}</code>%0A%0A‚ö†Ô∏è Check the logs ‚Üí github.com/${{ github.repository }}/actions"